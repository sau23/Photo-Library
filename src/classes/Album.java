package classes;

import java.io.Serializable;
import java.util.ArrayList;

/**
 * This class acts as a receptacle for Photo objects;
 * It will also perform operations on such collections,
 * such as searches, orderings, appending, merging, and
 * deleting.
 * 
 * @author Samuel Uganiza
 * @author Nicholas Petriello
 */
public class Album implements Serializable{
	
	/**
	 * Autogenerated serial number
	 */
	private static final long serialVersionUID = 959194540762382275L;
	
	/**
	 * Album object's name and list of different photos.
	 */
	private ArrayList<Photo> photos;//the list that holds the Photos
	private String name;
	
	/**
	 * Creates an album with the given name and instantiates the album's
	 * photo list to be empty.
	 * 
	 * @param name The name of the album
	 */
	public Album(String name){
		this.photos = new ArrayList<Photo>();
		this.name = name;
	}
	
	/**
	 * Returns this album's name.
	 */
	@Override
	public String toString() {
		return this.name;
	}
	
	/**
	 * Returns this album's list of photos.
	 * @return The array list reference to this album's photos
	 */
	public ArrayList<Photo> getPhotos(){
		return this.photos;
	}
	
	/**
	 * addPhoto() inserts a Photo to the Album
	 * list.
	 * @param pic The Photo to be added
	 */
	public boolean addPhoto(Photo pic){
		
		if(this.photos.contains(pic))
			return false;
		else
			this.photos.add(pic);
			return true;
			
	}
	
	/**
	 * removePhoto() searches the Album list to 
	 * find and remove the target picture.
	 * 
	 * @param pic The target Photo.
	 */
	public boolean removePhoto(Photo pic){
		
		return this.photos.remove(pic);
		
	}
	
	/**
	 * movePhoto() takes a given photo and inserts it
	 * into the desAlbum; the copy in the Album list
	 * will be deleted.
	 * 
	 * @param pic The Photo to be moved
	 * @param desAlbum The Album where the Photo will go
	 */
	public void movePhoto(Photo pic, Album desAlbum){
		
		this.photos.remove(pic);
		desAlbum.addPhoto(pic);
		return;
	}


}
